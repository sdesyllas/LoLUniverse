@using hbehr.recaptcha
@model LoLUniverse.Models.ContactModel
@{
    ViewBag.Title = "Contact";
}

<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<div class="row alpha60">
    <div class="col-md-8">

        <section id="loginForm">
            @using (Html.BeginForm("SendContactMessage", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Surname, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Surname, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Message, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(m => m.Message, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Message, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group ">
                    <label class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        @ReCaptcha.GetCaptcha()
                        <!-- Will show your captcha as your configured Language,
                        if no language is defined it will show ReCaptcha default language (English) -->
                        @*
                            The new reCAPTCHA API uses an Advanced Risk Analysis (ARA) system, which tracks user behavior before, during, 
                            and after they tick the reCAPTCHA box on any given web page. Based on this behavior, 
                            it’s apparently easy to tell whether you are a real person or not.
                            If the ARA system is unsure of your status as a human after monitoring your input 
                            the fallback is to present a second stage and a more typical CAPTCHA test.
                        *@
                        @if (ViewBag.CatchaError != null)
                        {
                            <span class="text-danger field-validation-error"><span class="">@ViewBag.CatchaError</span></span>
                        }
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Send" class="btn btn-default" />
                    </div>
                </div>
            }
        </section>

    </div>
</div>